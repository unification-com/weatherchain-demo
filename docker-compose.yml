version: "3"
services:
  weatherchain_bootnode:
    hostname: weatherchain_bootnode
    build:
      context: ./Docker
      dockerfile: ./bootnode/Dockerfile
    ports:
    - 30304:30304/udp
    networks:
      weatherchainnet:
        ipv4_address: ${BOOTNODE_IP}

  weatherchain_validator_1:
    hostname: weatherchain_validator_1
    depends_on:
    - weatherchain_bootnode
    environment:
    - address=${EV1_PUBLIC_ADDRESS}
    - bootnodeId=${BOOTNODE_ID}
    - bootnodeIp=${BOOTNODE_IP}
    - chainId=${WORKCHAIN_NETWORK_ID}
    - listenport=30305
    build:
      context: ./Docker
      dockerfile: ./validator/Dockerfile
      args:
        privatekey: ${EV1_PRIVATE_KEY}
        password: ${EV1_WALLET_PASS}
        genesis: weatherchain_genesis.json
    container_name: weatherchain_validator_1
    networks:
      weatherchainnet:
        ipv4_address: ${EV1_IP}

  weatherchain_validator_2:
    hostname: weatherchain_validator_2
    depends_on:
    - weatherchain_bootnode
    environment:
    - address=${EV2_PUBLIC_ADDRESS}
    - bootnodeId=${BOOTNODE_ID}
    - bootnodeIp=${BOOTNODE_IP}
    - chainId=${WORKCHAIN_NETWORK_ID}
    - listenport=30306
    build:
      context: ./Docker
      dockerfile: ./validator/Dockerfile
      args:
        privatekey: ${EV2_PRIVATE_KEY}
        password: ${EV2_WALLET_PASS}
        genesis: weatherchain_genesis.json
    container_name: weatherchain_validator_2
    networks:
      weatherchainnet:
        ipv4_address: ${EV2_IP}

  weatherchain_node_1:
    hostname: weatherchain_node_1
    depends_on:
    - weatherchain_validator_1
    environment:
    - address=${RPC_NODE_PUBLIC_ADDRESS}
    - bootnodeId=${BOOTNODE_ID}
    - bootnodeIp=${BOOTNODE_IP}
    - chainId=${WORKCHAIN_NETWORK_ID}
    - listenport=30307
    - rpcport=${WORKCHAIN_RPC_PORT}
    build:
      context: ./Docker
      dockerfile: ./node/Dockerfile
      args:
        privatekey: ${RPC_NODE_PRIVATE_KEY}
        password: ${RPC_NODE_WALLET_PASS}
        genesis: weatherchain_genesis.json
    container_name: weatherchain_node_1
    ports:
    - ${WORKCHAIN_RPC_PORT}:${WORKCHAIN_RPC_PORT}
    networks:
      weatherchainnet:
        ipv4_address: ${WORKCHAIN_RPC_HOST}

  weatherchain_explorer:
    hostname: weatherchain_explorer
    depends_on:
    - weatherchain_node_1
    environment:
    - rpcport=${WORKCHAIN_RPC_PORT}
    ports:
    - 8081:8081
    build:
      context: ./Docker
      dockerfile: ./explorer/Dockerfile
    container_name: weatherchain_explorer
    networks:
      weatherchainnet:
        ipv4_address: ${WORKCHAIN_EXPLORER_IP}

  weather_service:
    hostname: weather_service
    depends_on:
      - weatherchain_node_1
    build:
      context: ./Docker
      dockerfile: ./weather_service/Dockerfile
    container_name: weather_service
    networks:
      weatherchainnet:
        ipv4_address: ${WEATHER_SERVICE_IP}

  weatherchain_oracle:
    hostname: weatherchain_oracle
    depends_on:
      - weather_service
    build:
      context: ./Docker
      dockerfile: ./workchain_oracle/Dockerfile
    container_name: weatherchain_oracle
    environment:
    - mainchain_rpc=${MAINCHAIN_WEB3_PROVIDER_URL}
    - workchain_rpc=${WORKCHAIN_WEB3_PROVIDER_URL}
    - private_key=${EV1_PRIVATE_KEY}
    - workchain_root_address=${WORKCHAIN_ROOT_CONTRACT_ADDRESS}
    - timeout=${WORKCHAIN_ROOT_WRITE_TIMEOUT}
    - workchain_chain_id=${WORKCHAIN_NETWORK_ID}
    networks:
      weatherchainnet:
        ipv4_address: ${WEATHERCHAIN_ORACLE_IP}
      mainchain:
        ipv4_address: 192.168.43.125

networks:
  weatherchainnet:
    driver: bridge
    ipam:
      config:
      - subnet: ${NETWORK_SUBNET}
  mainchain:
    external:
      name: mainchain_chainnet

